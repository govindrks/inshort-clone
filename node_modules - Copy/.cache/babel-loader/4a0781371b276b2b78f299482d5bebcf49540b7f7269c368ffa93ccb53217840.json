{"ast":null,"code":"var _jsxFileName = \"C:\\\\inshort clone\\\\my-app\\\\src\\\\components\\\\HamburgerDrawer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\n// import ListItemButton from '@mui/material/ListItemButton';\n// import ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n// import InboxIcon from '@mui/icons-material/MoveToInbox';\n// import MailIcon from '@mui/icons-material/Mail';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport categories from '../data/Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwipeableTemporaryDrawer({\n  setCategory\n}) {\n  _s();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode: prefersDarkMode ? 'dark' : 'light'\n    }\n  }), [prefersDarkMode]);\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 200,\n      paddingLeft: 10,\n      paddingRight: 5\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \" Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: categories.map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          height\n        },\n        button: true,\n        onClick: () => setCategory(text),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer('left', true),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n          anchor: 'left',\n          open: state['left'],\n          onClose: toggleDrawer('left', false),\n          onOpen: toggleDrawer('left', true),\n          children: list('left')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, 'left', true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(SwipeableTemporaryDrawer, \"d7r61WfAmC8kroj26h7iydUD56k=\", false, function () {\n  return [useMediaQuery];\n});\n_c = SwipeableTemporaryDrawer;\nvar _c;\n$RefreshReg$(_c, \"SwipeableTemporaryDrawer\");","map":{"version":3,"names":["React","Box","createTheme","ThemeProvider","useMediaQuery","CssBaseline","SwipeableDrawer","Button","List","Divider","ListItem","ListItemText","MenuIcon","categories","jsxDEV","_jsxDEV","SwipeableTemporaryDrawer","setCategory","_s","state","setState","useState","left","prefersDarkMode","theme","useMemo","palette","mode","toggleDrawer","anchor","open","event","type","key","list","sx","width","paddingLeft","paddingRight","role","onClick","onKeyDown","children","fileName","_jsxFileName","lineNumber","columnNumber","map","text","index","style","height","button","primary","Fragment","onClose","onOpen","_c","$RefreshReg$"],"sources":["C:/inshort clone/my-app/src/components/HamburgerDrawer.js"],"sourcesContent":["import  React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\n// import ListItemButton from '@mui/material/ListItemButton';\r\n// import ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// import InboxIcon from '@mui/icons-material/MoveToInbox';\r\n// import MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport categories from '../data/Category';\r\n\r\nexport default function SwipeableTemporaryDrawer({ setCategory }) {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n    \r\n  });\r\n\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top'|| anchor === 'bottom' ? 'auto' : 200, paddingLeft: 10, paddingRight: 5  }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List> \r\n          <ListItem> Categories</ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {categories.map((text, index) => (\r\n          <ListItem \r\n          style={{ height}}\r\n          button key={text} onClick={() =>setCategory(text)}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n    <React.Fragment key={'left'}>\r\n          <Button onClick={toggleDrawer('left', true)}>\r\n            <MenuIcon />\r\n          </Button>\r\n          <ThemeProvider theme={theme}>\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n          </ThemeProvider>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}