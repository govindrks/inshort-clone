{"ast":null,"code":"var _jsxFileName = \"C:\\\\inshort clone\\\\my-app\\\\src\\\\components\\\\HamburgerDrawer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwipeableTemporaryDrawer() {\n  _s();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode: prefersDarkMode ? 'dark' : 'light'\n    }\n  }), [prefersDarkMode]);\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer('left', true),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: 'left',\n        open: state['left'],\n        onClose: toggleDrawer('left', false),\n        onOpen: toggleDrawer('left', true),\n        children: list('left')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, 'left', true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(SwipeableTemporaryDrawer, \"d7r61WfAmC8kroj26h7iydUD56k=\", true);\n_c = SwipeableTemporaryDrawer;\nvar _c;\n$RefreshReg$(_c, \"SwipeableTemporaryDrawer\");","map":{"version":3,"names":["React","Box","createTheme","ThemeProvider","SwipeableDrawer","Button","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","InboxIcon","MailIcon","MenuIcon","jsxDEV","_jsxDEV","SwipeableTemporaryDrawer","_s","state","setState","useState","left","prefersDarkMode","useMediaQuery","theme","useMemo","palette","mode","toggleDrawer","anchor","open","event","type","key","list","sx","width","role","onClick","onKeyDown","children","map","text","index","disablePadding","fileName","_jsxFileName","lineNumber","columnNumber","primary","Fragment","onClose","onOpen","_c","$RefreshReg$"],"sources":["C:/inshort clone/my-app/src/components/HamburgerDrawer.js"],"sourcesContent":["import  React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n    \r\n  });\r\n\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n    <React.Fragment key={'left'}>\r\n          <Button onClick={toggleDrawer('left', true)}>\r\n            <MenuIcon />\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}